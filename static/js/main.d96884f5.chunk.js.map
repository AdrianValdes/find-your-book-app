{"version":3,"sources":["components/App.js","components/SearchForm.js","components/BookItem.js","components/BookList.js","components/Pagination.js","index.js"],"names":["paginatedTitle","paginatedAuthor","paginatedPublihser","paginatedSubject","paginatedISBN","paginatedTypeOfBook","paginatedDownloadFormat","SearchForm","state","searchedTitle","searchedAuthor","searchedPublisher","searchedSubject","searchedISBN","typeOfBook","downloadFormat","onFormSubmit","event","preventDefault","props","Form","onSubmit","this","className","Group","unstackable","widths","Input","label","placeholder","value","onChange","setState","target","Select","control","disable","selected","grouped","Field","defaultChecked","type","name","Button","color","icon","labelPosition","content","React","Component","BookItem","bookImage","book","volumeInfo","imageLinks","smallThumbnail","Segment","clearing","style","cursor","href","previewLink","rel","Image","src","alt","floated","size","fontStyle","fontWeight","title","authors","publishedDate","description","BookList","books","map","key","id","Accordion","PaginationCompact","onPageChange","data","onPaginationMove","activePage","Pagination","boundaryRange","defaultActivePage","ellipsisItem","firstItem","lastItem","siblingRange","totalPages","totalItems","KEY","baseURL","App","a","fetch","then","resp","json","response","items","alert","indexToSearch","Container","Header","as","block","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d96884f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport SearchForm from './SearchForm';\r\nimport BookList from './BookList';\r\nimport './App.css';\r\nimport { Segment, Container, Header } from 'semantic-ui-react';\r\nimport PaginationCompact from './Pagination';\r\n\r\nconst KEY = 'AIzaSyCpLykouuOz1NzjMuy5fXuxkntk2eHVlCU';\r\nconst baseURL = 'https://www.googleapis.com/books/v1/volumes?q=';\r\n\r\nlet paginatedTitle;\r\nlet paginatedAuthor;\r\nlet paginatedPublihser;\r\nlet paginatedSubject;\r\nlet paginatedISBN;\r\nlet paginatedTypeOfBook;\r\nlet paginatedDownloadFormat;\r\n\r\nclass App extends React.Component {\r\n  state = { books: [], totalItems: 0 };\r\n\r\n  onFormSubmit = async ({\r\n    searchedTitle,\r\n    searchedAuthor,\r\n    searchedPublisher,\r\n    searchedSubject,\r\n    searchedISBN,\r\n    typeOfBook,\r\n    downloadFormat\r\n  }) => {\r\n    if (searchedTitle) {\r\n      searchedTitle = `intitle:${searchedTitle}`;\r\n    }\r\n    paginatedTitle = searchedTitle;\r\n\r\n    if (searchedAuthor) {\r\n      searchedAuthor = `&inauthor:${searchedAuthor}`;\r\n    }\r\n    paginatedAuthor = searchedAuthor;\r\n\r\n    if (searchedPublisher) {\r\n      searchedPublisher = `&inpublisher:${searchedPublisher}`;\r\n    }\r\n    paginatedPublihser = searchedPublisher;\r\n\r\n    if (searchedSubject) {\r\n      searchedSubject = `&subject:${searchedSubject}`;\r\n    }\r\n    paginatedSubject = searchedSubject;\r\n\r\n    if (searchedISBN) {\r\n      searchedISBN = `&isbn:${searchedISBN}`;\r\n    }\r\n    paginatedISBN = searchedISBN;\r\n\r\n    if (typeOfBook) {\r\n      typeOfBook = `&printType=${typeOfBook}`;\r\n    }\r\n    paginatedTypeOfBook = typeOfBook;\r\n\r\n    if (downloadFormat) {\r\n      downloadFormat = `&download=${downloadFormat}`;\r\n    }\r\n    paginatedDownloadFormat = downloadFormat;\r\n\r\n    try {\r\n      let response = await fetch(\r\n        `${baseURL}${searchedTitle}${searchedAuthor}${searchedSubject}${searchedPublisher}${searchedISBN}${typeOfBook}${downloadFormat}&key=${KEY}&startIndex=${0}`\r\n      ).then(resp => resp.json());\r\n\r\n      this.setState({ books: response.items });\r\n\r\n      this.setState({ totalItems: response.totalItems });\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  onPaginationMove = async indexToSearch => {\r\n    try {\r\n      let response = await fetch(\r\n        `${baseURL}${paginatedTitle}${paginatedAuthor}${paginatedSubject}${paginatedPublihser}${paginatedISBN}${paginatedTypeOfBook}${paginatedDownloadFormat}&key=${KEY}&startIndex=${indexToSearch}`\r\n      ).then(resp => resp.json());\r\n\r\n      this.setState({ books: response.items });\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"externalDIV\">\r\n        <Container className=\"container\">\r\n          <Header color=\"teal\" as=\"h3\" block>\r\n            Find your book!\r\n          </Header>\r\n          <Segment className=\"externalSegment\">\r\n            <SearchForm onFormSubmit={this.onFormSubmit} />\r\n          </Segment>\r\n\r\n          <BookList books={this.state.books} />\r\n          <PaginationCompact\r\n            onPaginationMove={this.onPaginationMove}\r\n            totalItems={this.state.totalItems}\r\n          />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './SearchForm.css';\r\nimport { Button, Form } from 'semantic-ui-react';\r\n\r\nclass SearchForm extends React.Component {\r\n  state = {\r\n    searchedTitle: '',\r\n    searchedAuthor: '',\r\n    searchedPublisher: '',\r\n    searchedSubject: '',\r\n    searchedISBN: '',\r\n    typeOfBook: '',\r\n    downloadFormat: ''\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const {\r\n      searchedTitle,\r\n      searchedAuthor,\r\n      searchedPublisher,\r\n      searchedSubject,\r\n      searchedISBN,\r\n      typeOfBook,\r\n      downloadFormat\r\n    } = this.state;\r\n\r\n    //Calling the callback form parent component\r\n    this.props.onFormSubmit({\r\n      searchedTitle,\r\n      searchedAuthor,\r\n      searchedPublisher,\r\n      searchedSubject,\r\n      searchedISBN,\r\n      typeOfBook,\r\n      downloadFormat\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit} className=\"externalForm\">\r\n        <Form.Group unstackable widths={2}>\r\n          <Form.Input\r\n            label=\"Book Title\"\r\n            placeholder=\"Book Title\"\r\n            value={this.state.searchedTitle}\r\n            onChange={event => {\r\n              this.setState({ searchedTitle: event.target.value });\r\n            }}\r\n          />\r\n          <Form.Input\r\n            label=\"Author\"\r\n            placeholder=\"Author\"\r\n            value={this.state.searchedAuthor}\r\n            onChange={event => {\r\n              this.setState({ searchedAuthor: event.target.value });\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group widths={2}>\r\n          <Form.Input\r\n            label=\"Publisher\"\r\n            placeholder=\"Publisher\"\r\n            value={this.state.searchedPublisher}\r\n            onChange={event => {\r\n              this.setState({ searchedPublisher: event.target.value });\r\n            }}\r\n          />\r\n          <Form.Input\r\n            label=\"Subject\"\r\n            placeholder=\"Subject\"\r\n            value={this.state.searchedSubject}\r\n            onChange={event => {\r\n              this.setState({ searchedSubject: event.target.value });\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group widths={2}>\r\n          <Form.Input\r\n            label=\"ISBN\"\r\n            placeholder=\"ISBN\"\r\n            value={this.state.searchedISBN}\r\n            onChange={event => {\r\n              this.setState({ searchedISBN: event.target.value });\r\n            }}\r\n          />\r\n          <Form.Select\r\n            label=\"Download Format\"\r\n            control=\"select\"\r\n            onChange={event => {\r\n              this.setState({ downloadFormat: event.target.value });\r\n            }}\r\n          >\r\n            <option value=\" \" disable selected>\r\n              All possible\r\n            </option>\r\n            <option value=\"epub\">epub</option>\r\n            <option value=\"pdf\">pdf</option>\r\n          </Form.Select>\r\n        </Form.Group>\r\n        <Form.Group grouped>\r\n          <label>Print Type</label>\r\n          <Form.Field\r\n            defaultChecked\r\n            label=\"All\"\r\n            control=\"input\"\r\n            type=\"radio\"\r\n            name=\"htmlRadios\"\r\n            onChange={() => {\r\n              this.setState({ typeOfBook: 'all' });\r\n            }}\r\n          />\r\n          <Form.Field\r\n            label=\"Books\"\r\n            control=\"input\"\r\n            type=\"radio\"\r\n            name=\"htmlRadios\"\r\n            onChange={() => {\r\n              this.setState({ typeOfBook: 'books' });\r\n            }}\r\n          />\r\n          <Form.Field\r\n            label=\"Magazines\"\r\n            control=\"input\"\r\n            type=\"radio\"\r\n            name=\"htmlRadios\"\r\n            onChange={() => {\r\n              this.setState({ typeOfBook: 'magazines' });\r\n            }}\r\n          />\r\n          <Button\r\n            color=\"teal\"\r\n            type=\"submit\"\r\n            className=\"search\"\r\n            icon=\"search\"\r\n            labelPosition=\"right\"\r\n            content=\"Search\"\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from 'react';\r\nimport { Image, Segment } from 'semantic-ui-react';\r\n\r\nconst BookItem = ({ book }) => {\r\n  let bookImage;\r\n\r\n  if (book.volumeInfo.imageLinks) {\r\n    let image = book.volumeInfo.imageLinks.smallThumbnail;\r\n    bookImage = image;\r\n  } else {\r\n    let image = 'no image';\r\n    bookImage = image;\r\n  }\r\n\r\n  return (\r\n    <Segment clearing style={{ cursor: 'pointer' }}>\r\n      <a\r\n        href={book.volumeInfo.previewLink}\r\n        rel=\"noopener noreferrer\"\r\n        target=\"_blank\"\r\n        style={{ color: 'inherit' }}\r\n      >\r\n        <Image src={bookImage} alt=\"\" floated=\"left\" size=\"tiny\" />{' '}\r\n        <span style={{ fontStyle: 'italic', fontWeight: 'bold' }}>\r\n          {book.volumeInfo.title}\r\n        </span>\r\n        <span> by {book.volumeInfo.authors}</span> (\r\n        {book.volumeInfo.publishedDate})\r\n        <br />\r\n        {book.volumeInfo.description}\r\n      </a>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default BookItem;\r\n","import React from 'react';\r\nimport BookItem from './BookItem';\r\n\r\nconst BookList = ({ books }) => {\r\n  if (books) {\r\n    return (\r\n      <div>\r\n        {books.map(book => {\r\n          return <BookItem key={book.id} book={book} Accordion />;\r\n        })}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>Sorry there is no results for your search :(</div>;\r\n  }\r\n};\r\n\r\nexport default BookList;\r\n","import React from 'react';\r\nimport { Pagination } from 'semantic-ui-react';\r\n\r\nclass PaginationCompact extends React.Component {\r\n  onPageChange = (event, data) => {\r\n    this.props.onPaginationMove(data.activePage * 10);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Pagination\r\n          boundaryRange={0}\r\n          defaultActivePage={0}\r\n          ellipsisItem={null}\r\n          firstItem={null}\r\n          lastItem={null}\r\n          siblingRange={5}\r\n          totalPages={this.props.totalItems}\r\n          onPageChange={this.onPageChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaginationCompact;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}