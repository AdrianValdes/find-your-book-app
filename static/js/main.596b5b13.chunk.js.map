{"version":3,"sources":["components/SearchBar.js","components/BookItem.js","components/BookList.js","components/App.js","index.js"],"names":["SearchBar","state","searchedTitle","searchedAuthor","searchedPublisher","searchedSubject","searchedISBN","typeOfBook","downloadFormat","onFormSubmit","event","preventDefault","props","Form","onSubmit","this","Group","unstackable","widths","Input","label","placeholder","value","onChange","setState","target","Select","control","disable","selected","grouped","Field","defaultChecked","type","name","Button","className","React","Component","BookItem","bookImage","book","volumeInfo","imageLinks","thumbnail","style","cursor","href","previewLink","rel","color","Image","src","alt","verticalAlign","fontStyle","fontWeight","title","authors","description","Divider","BookList","books","map","key","id","KEY","baseURL","App","a","fetch","then","resp","json","response","items","alert","Container","Segment","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.596b5b13.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Form } from 'semantic-ui-react';\r\n\r\nclass SearchBar extends React.Component {\r\n  state = {\r\n    searchedTitle: '',\r\n    searchedAuthor: '',\r\n    searchedPublisher: '',\r\n    searchedSubject: '',\r\n    searchedISBN: '',\r\n    typeOfBook: '',\r\n    downloadFormat: ''\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    //Calling the callback form parent component\r\n    const {\r\n      searchedTitle,\r\n      searchedAuthor,\r\n      searchedPublisher,\r\n      searchedSubject,\r\n      searchedISBN,\r\n      typeOfBook,\r\n      downloadFormat\r\n    } = this.state;\r\n\r\n    this.props.onFormSubmit({\r\n      searchedTitle,\r\n      searchedAuthor,\r\n      searchedPublisher,\r\n      searchedSubject,\r\n      searchedISBN,\r\n      typeOfBook,\r\n      downloadFormat\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.onFormSubmit}>\r\n        <Form.Group unstackable widths={2}>\r\n          <Form.Input\r\n            label=\"Book Title\"\r\n            placeholder=\"Book Title\"\r\n            value={this.state.searchedTitle}\r\n            onChange={event => {\r\n              this.setState({ searchedTitle: event.target.value });\r\n            }}\r\n          />\r\n          <Form.Input\r\n            label=\"Author\"\r\n            placeholder=\"Author\"\r\n            value={this.state.searchedAuthor}\r\n            onChange={event => {\r\n              this.setState({ searchedAuthor: event.target.value });\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group widths={2}>\r\n          <Form.Input\r\n            label=\"Publisher\"\r\n            placeholder=\"Publisher\"\r\n            value={this.state.searchedPublisher}\r\n            onChange={event => {\r\n              this.setState({ searchedPublisher: event.target.value });\r\n            }}\r\n          />\r\n          <Form.Input\r\n            label=\"Subject\"\r\n            placeholder=\"Subject\"\r\n            value={this.state.searchedSubject}\r\n            onChange={event => {\r\n              this.setState({ searchedSubject: event.target.value });\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group widths={2}>\r\n          <Form.Input\r\n            label=\"ISBN\"\r\n            placeholder=\"ISBN\"\r\n            value={this.state.searchedISBN}\r\n            onChange={event => {\r\n              this.setState({ searchedISBN: event.target.value });\r\n            }}\r\n          />\r\n          <Form.Select\r\n            label=\"Download Format\"\r\n            control=\"select\"\r\n            onChange={event => {\r\n              this.setState({ downloadFormat: event.target.value });\r\n            }}\r\n          >\r\n            <option value=\"\" disable selected>\r\n              All possible\r\n            </option>\r\n            <option value=\"EPUB\">EPUB</option>\r\n            <option value=\"PDF\">PDF</option>\r\n          </Form.Select>\r\n        </Form.Group>\r\n        <Form.Group grouped>\r\n          <label>Print Type</label>\r\n          <Form.Field\r\n            defaultChecked\r\n            label=\"All\"\r\n            control=\"input\"\r\n            type=\"radio\"\r\n            name=\"htmlRadios\"\r\n            onChange={() => {\r\n              this.setState({ typeOfBook: 'All' });\r\n            }}\r\n          />\r\n          <Form.Field\r\n            label=\"Books\"\r\n            control=\"input\"\r\n            type=\"radio\"\r\n            name=\"htmlRadios\"\r\n            onChange={() => {\r\n              this.setState({ typeOfBook: 'Books' });\r\n            }}\r\n          />\r\n          <Form.Field\r\n            label=\"Magazines\"\r\n            control=\"input\"\r\n            type=\"radio\"\r\n            name=\"htmlRadios\"\r\n            onChange={() => {\r\n              this.setState({ typeOfBook: 'Magazines' });\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\" className=\"search\">\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport { Image, Divider } from 'semantic-ui-react';\r\n\r\nconst BookItem = ({ book }) => {\r\n  let bookImage;\r\n\r\n  if (book.volumeInfo.imageLinks) {\r\n    let image = book.volumeInfo.imageLinks.thumbnail;\r\n    bookImage = image;\r\n  } else {\r\n    let image = 'no image';\r\n    bookImage = image;\r\n  }\r\n\r\n  return (\r\n    <div style={{ cursor: 'pointer' }}>\r\n      <a\r\n        href={book.volumeInfo.previewLink}\r\n        rel=\"noopener noreferrer\"\r\n        target=\"_blank\"\r\n        style={{ color: 'inherit' }}\r\n      >\r\n        <div>\r\n          <Image src={bookImage} alt=\"\" verticalAlign=\"middle\" />{' '}\r\n          <span style={{ fontStyle: 'italic', fontWeight: 'bold' }}>\r\n            {book.volumeInfo.title}\r\n          </span>\r\n          <span>\r\n            {' '}\r\n            by {book.volumeInfo.authors} <br />\r\n          </span>\r\n        </div>\r\n        <br />\r\n        {book.volumeInfo.description}\r\n      </a>\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookItem;\r\n","import React from 'react';\r\nimport BookItem from './BookItem';\r\n\r\nconst BookList = ({ books }) => {\r\n  if (books) {\r\n    return (\r\n      <div>\r\n        {books.map(book => {\r\n          return <BookItem key={book.id} book={book} />;\r\n        })}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>Sorry there is no results for your search :(</div>;\r\n  }\r\n};\r\n\r\nexport default BookList;\r\n","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\n\r\nimport BookList from './BookList';\r\nimport { Segment, Container } from 'semantic-ui-react';\r\n\r\nconst KEY = 'AIzaSyCpLykouuOz1NzjMuy5fXuxkntk2eHVlCU';\r\nconst baseURL = 'https://www.googleapis.com/books/v1/volumes?q=';\r\nlet startIndex = 0;\r\n\r\nclass App extends React.Component {\r\n  state = { books: [] };\r\n\r\n  onFormSubmit = async ({\r\n    searchedTitle,\r\n    searchedAuthor,\r\n    searchedPublisher,\r\n    searchedSubject,\r\n    searchedISBN,\r\n    typeOfBook,\r\n    downloadFormat\r\n  }) => {\r\n    if (searchedTitle) {\r\n      searchedTitle = `+intitle:${searchedTitle}`;\r\n    }\r\n\r\n    if (searchedAuthor) {\r\n      searchedAuthor = `+inauthor:${searchedAuthor}`;\r\n    }\r\n    if (searchedPublisher) {\r\n      searchedPublisher = `+inpublisher:${searchedPublisher}`;\r\n    }\r\n    if (searchedSubject) {\r\n      searchedSubject = `+subject:${searchedSubject}`;\r\n    }\r\n    if (searchedISBN) {\r\n      searchedISBN = `+isbn:${searchedISBN}`;\r\n    }\r\n    if (typeOfBook) {\r\n      typeOfBook = `+printType=${typeOfBook}`;\r\n    }\r\n    if (downloadFormat) {\r\n      downloadFormat = `+download=${downloadFormat}`;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${baseURL}${searchedTitle}${searchedAuthor}${searchedSubject}${searchedPublisher}${searchedISBN}${typeOfBook}${downloadFormat}&startIndex=${startIndex}&key=${KEY}`\r\n      ).then(resp => resp.json());\r\n\r\n      this.setState({ books: response.items });\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Segment>\r\n          <SearchBar onFormSubmit={this.onFormSubmit} />\r\n        </Segment>\r\n\r\n        <BookList books={this.state.books} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}