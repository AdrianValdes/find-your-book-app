{"version":3,"sources":["components/SearchBar.js","components/BookItem.js","components/BookList.js","components/App.js","index.js"],"names":["SearchBar","state","searchedTitle","searchedAuthor","searchedPublisher","searchedSubject","searchedISBN","onFormSubmit","event","preventDefault","props","Form","onSubmit","this","Group","unstackable","widths","Input","label","placeholder","value","onChange","setState","target","Field","control","grouped","type","name","Button","className","React","Component","BookItem","imageF","book","onBookSelect","volumeInfo","imageLinks","thumbnail","onClick","style","cursor","Image","src","alt","verticalAlign","fontStyle","fontWeight","title","authors","description","Divider","BookList","books","renderedBooks","map","KEY","App","selectedBook","author","a","fetch","then","resp","json","response","responseFinal","console","log","catch","error","items","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9e4163dc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Form } from 'semantic-ui-react';\r\n\r\nclass SearchBar extends React.Component {\r\n  state = {\r\n    searchedTitle: '',\r\n    searchedAuthor: '',\r\n    searchedPublisher: '',\r\n    searchedSubject: '',\r\n    searchedISBN: ''\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    //Calling the callback form parent component\r\n\r\n    this.props.onFormSubmit(\r\n      this.state.searchedTitle,\r\n      this.state.searchedAuthor,\r\n      this.state.searchedPublisher,\r\n      this.state.searchedSubject,\r\n      this.state.searchedISBN\r\n    );\r\n  };\r\n\r\n  /* onAuthorSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.searchedAuthor) {\r\n      this.props.onFormSubmit(this.state.searchedAuthor);\r\n    }\r\n  }; */\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.onFormSubmit}>\r\n          <Form.Group unstackable widths={2}>\r\n            <Form.Input\r\n              label=\"Book Title\"\r\n              placeholder=\"Book Title\"\r\n              value={this.state.searchedTitle}\r\n              onChange={event => {\r\n                this.setState({ searchedTitle: event.target.value });\r\n              }}\r\n            />\r\n            <Form.Input\r\n              label=\"Author\"\r\n              placeholder=\"Author\"\r\n              value={this.state.searchedAuthor}\r\n              onChange={event => {\r\n                this.setState({ searchedAuthor: event.target.value });\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group widths={2}>\r\n            <Form.Input\r\n              label=\"Publisher\"\r\n              placeholder=\"Publisher\"\r\n              value={this.state.searchedPublisher}\r\n              onChange={event => {\r\n                this.setState({ searchedPublisher: event.target.value });\r\n              }}\r\n            />\r\n            <Form.Input\r\n              label=\"Subject\"\r\n              placeholder=\"Subject\"\r\n              value={this.state.searchedSubject}\r\n              onChange={event => {\r\n                this.setState({ searchedSubject: event.target.value });\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group widths={2}>\r\n            <Form.Input\r\n              label=\"ISBN\"\r\n              placeholder=\"ISBN\"\r\n              value={this.state.searchedISBN}\r\n              onChange={event => {\r\n                this.setState({ searchedISBN: event.target.value });\r\n              }}\r\n            />\r\n            <Form.Field label=\"Donwload Format\" control=\"select\">\r\n              <option value=\"EPUB\">EPUB</option>\r\n              <option value=\"PDF\">PDF</option>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group grouped>\r\n            <label>Print Type</label>\r\n            <Form.Field\r\n              label=\"All\"\r\n              control=\"input\"\r\n              type=\"radio\"\r\n              name=\"htmlRadios\"\r\n            />\r\n            <Form.Field\r\n              label=\"Books\"\r\n              control=\"input\"\r\n              type=\"radio\"\r\n              name=\"htmlRadios\"\r\n            />\r\n            <Form.Field\r\n              label=\"Magazines\"\r\n              control=\"input\"\r\n              type=\"radio\"\r\n              name=\"htmlRadios\"\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\" className=\"search\">\r\n            Search\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport { Image, Divider } from 'semantic-ui-react';\r\n\r\nconst BookItem = ({ book, onBookSelect }) => {\r\n  let imageF;\r\n\r\n  if (book.volumeInfo.imageLinks) {\r\n    let image = book.volumeInfo.imageLinks.thumbnail;\r\n    imageF = image;\r\n  } else {\r\n    let image = 'no image';\r\n    imageF = image;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        onBookSelect(book);\r\n      }}\r\n      style={{ cursor: 'pointer' }}\r\n    >\r\n      <Image src={imageF} alt=\"\" verticalAlign=\"middle\" />\r\n\r\n      <span style={{ fontStyle: 'italic', fontWeight: 'bold' }}>\r\n        {book.volumeInfo.title}\r\n      </span>\r\n      <span> by {book.volumeInfo.authors}</span>\r\n      <span>\r\n        {' '}\r\n        <br />\r\n        {book.volumeInfo.description}{' '}\r\n      </span>\r\n\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookItem;\r\n","import React from 'react';\r\nimport BookItem from './BookItem';\r\nimport { List } from 'semantic-ui-react';\r\n\r\nconst BookList = ({ books, onBookSelect }) => {\r\n  const renderedBooks = books.map(book => {\r\n    return <BookItem onBookSelect={onBookSelect} book={book} />;\r\n  });\r\n  return <div>{renderedBooks}</div>;\r\n};\r\n\r\nexport default BookList;\r\n","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\n\r\nimport BookList from './BookList';\r\n\r\nconst KEY = 'AIzaSyCpLykouuOz1NzjMuy5fXuxkntk2eHVlCU';\r\n/* const exampleURL =\r\n  'https://www.googleapis.com/books/v1/volumes?q=flowers+inauthor:keyes&key='; */\r\n\r\nclass App extends React.Component {\r\n  state = { books: [], selectedBook: null };\r\n\r\n  onFormSubmit = async (title, author) => {\r\n    let responseFinal;\r\n    if (author && title) {\r\n      try {\r\n        let response = await fetch(\r\n          `https://www.googleapis.com/books/v1/volumes?q=${title}+inauthor:${author}&key=${KEY}`\r\n        ).then(resp => resp.json());\r\n\r\n        responseFinal = response;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    if (title && !author) {\r\n      let response = await fetch(\r\n        `https://www.googleapis.com/books/v1/volumes?q=${title}&key=${KEY}`\r\n      )\r\n        .then(resp => resp.json())\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n\r\n      responseFinal = response;\r\n    }\r\n\r\n    if (author && !title) {\r\n      let response = await fetch(\r\n        `https://www.googleapis.com/books/v1/volumes?q=inauthor:${author}&key=${KEY}`\r\n      )\r\n        .then(resp => resp.json())\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n\r\n      responseFinal = response;\r\n    }\r\n\r\n    this.setState({ books: responseFinal.items });\r\n  };\r\n\r\n  onBookSelect = book => {\r\n    console.log('From the App!', book);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui segment \">\r\n          <SearchBar onFormSubmit={this.onFormSubmit} />\r\n        </div>\r\n        <BookList onBookSelect={this.onBookSelect} books={this.state.books} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}